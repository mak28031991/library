public static int NextPowerOf2(int num)
	{
		num= num|num>>1;
		num= num|num>>2;
		num= num|num>>4;
		num= num|num>>8;
		num= num|num>>16;
		
		
		return num+1;
		
	}
	public static int PrevPowerOf2(int num)
	{
		num= num|num>>1;
		num= num|num>>2;
		num= num|num>>4;
		num= num|num>>8;
		num= num|num>>16;
		
		
		return (num+1)>>1;
		
	}
	
	
	public static int NoOfSetBits(int num)
	{
		int count=0;
		while(num!=0)
		{
			if((num & 1) !=0)
			{
				count++;
			}
			num=num>>1;
		}
		return count;
	}
	public static boolean IsMultipleOf3(int num)
	{
		int odd_count=0;
		int even_count=0;
		if(num<0) num=-1*num;
		if(num==0) return true;
		if(num==1 || num==2) return false; 
		while(num!=0)
		{
			if((num&1)!=0)
			{
				odd_count++;
			}
			num= num>>1;
			if((num&1)!=0)
			{
				even_count++;
			}
			num= num>>1;
		}
		if(test.IsMultipleOf3(odd_count-even_count)) return true;
		else return false;
	}
	
